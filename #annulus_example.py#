import numpy as np
from univ_rand_gen import UnivRandGen


def uniform_annulus(rad_min, rad_max, num_points):
    # generates num_points uniformly distributed throughout an annulus

    #density of rad is 2r/(rad_max**2 - rad_min**2) so 
    #cdf is F(r) = (r**2 - rad_min**2) / (rad_max**2 - rad_min**2)

    theta = 2*np.pi*np.random.random((num_points,))

In [1]: from univ_rand_gen import UnivRandGen

In [2]: cdf = lambda x: 1 - np.exp(-x)

In [3]: gen = UnivRandGen(func=cdf, type = 'cdf')

In [4]: import numpy as np

In [5]: from matplotlib import pyplot as plt

In [6]: data = [gen.random(

    rad_gen = UnivRandGen(func = cdf, type = 'cdf')

    radius = np.array([rad_gen.random() for _ in range(num_points)])

    x = radius*np.cos(theta)
    y = radius*np.sin(theta)

    return x,y
